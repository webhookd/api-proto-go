// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: webhookd.proto

package webhookd

import (
	context "context"
	fmt "fmt"
	_ "github.com/gogo/protobuf/gogoproto"
	proto "github.com/gogo/protobuf/proto"
	grpc "google.golang.org/grpc"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.GoGoProtoPackageIsVersion2 // please upgrade the proto package

type HttpMethod int32

const (
	HTTP_METHOD_UNKNOWN HttpMethod = 0
	HTTP_METHOD_GET     HttpMethod = 1
	HTTP_METHOD_HEAD    HttpMethod = 2
	HTTP_METHOD_POST    HttpMethod = 3
	HTTP_METHOD_PUT     HttpMethod = 4
	HTTP_METHOD_DELETE  HttpMethod = 5
	HTTP_METHOD_CONNECT HttpMethod = 6
	HTTP_METHOD_OPTIONS HttpMethod = 7
	HTTP_METHOD_TRACE   HttpMethod = 8
)

var HttpMethod_name = map[int32]string{
	0: "HTTP_METHOD_UNKNOWN",
	1: "HTTP_METHOD_GET",
	2: "HTTP_METHOD_HEAD",
	3: "HTTP_METHOD_POST",
	4: "HTTP_METHOD_PUT",
	5: "HTTP_METHOD_DELETE",
	6: "HTTP_METHOD_CONNECT",
	7: "HTTP_METHOD_OPTIONS",
	8: "HTTP_METHOD_TRACE",
}

var HttpMethod_value = map[string]int32{
	"HTTP_METHOD_UNKNOWN": 0,
	"HTTP_METHOD_GET":     1,
	"HTTP_METHOD_HEAD":    2,
	"HTTP_METHOD_POST":    3,
	"HTTP_METHOD_PUT":     4,
	"HTTP_METHOD_DELETE":  5,
	"HTTP_METHOD_CONNECT": 6,
	"HTTP_METHOD_OPTIONS": 7,
	"HTTP_METHOD_TRACE":   8,
}

func (x HttpMethod) String() string {
	return proto.EnumName(HttpMethod_name, int32(x))
}

func (HttpMethod) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_f771f8a0984858e8, []int{0}
}

type State int32

const (
	STATE_UNKNOWN   State = 0
	STATE_ACTIVE    State = 1
	STATE_PAUSED    State = 2
	STATE_SUSPENDED State = 3
	STATE_CANCELLED State = 4
	STATE_DELETED   State = 5
)

var State_name = map[int32]string{
	0: "STATE_UNKNOWN",
	1: "STATE_ACTIVE",
	2: "STATE_PAUSED",
	3: "STATE_SUSPENDED",
	4: "STATE_CANCELLED",
	5: "STATE_DELETED",
}

var State_value = map[string]int32{
	"STATE_UNKNOWN":   0,
	"STATE_ACTIVE":    1,
	"STATE_PAUSED":    2,
	"STATE_SUSPENDED": 3,
	"STATE_CANCELLED": 4,
	"STATE_DELETED":   5,
}

func (x State) String() string {
	return proto.EnumName(State_name, int32(x))
}

func (State) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_f771f8a0984858e8, []int{1}
}

type Plan int32

const (
	PLAN_UNKNOWN Plan = 0
	PLAN_TRIAL   Plan = 1
	PLAN_FREE    Plan = 2
	PLAN_PAID    Plan = 3
	PLAN_BESPOKE Plan = 4
)

var Plan_name = map[int32]string{
	0: "PLAN_UNKNOWN",
	1: "PLAN_TRIAL",
	2: "PLAN_FREE",
	3: "PLAN_PAID",
	4: "PLAN_BESPOKE",
}

var Plan_value = map[string]int32{
	"PLAN_UNKNOWN": 0,
	"PLAN_TRIAL":   1,
	"PLAN_FREE":    2,
	"PLAN_PAID":    3,
	"PLAN_BESPOKE": 4,
}

func (x Plan) String() string {
	return proto.EnumName(Plan_name, int32(x))
}

func (Plan) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_f771f8a0984858e8, []int{2}
}

type SubscriptionCreateRequest struct {
	Provider             *Provider `protobuf:"bytes,1,opt,name=provider,proto3" json:"provider,omitempty"`
	Key                  string    `protobuf:"bytes,2,opt,name=key,proto3" json:"key,omitempty"`
	Name                 string    `protobuf:"bytes,3,opt,name=name,proto3" json:"name,omitempty"`
	XXX_NoUnkeyedLiteral struct{}  `json:"-"`
	XXX_unrecognized     []byte    `json:"-"`
	XXX_sizecache        int32     `json:"-"`
}

func (m *SubscriptionCreateRequest) Reset()         { *m = SubscriptionCreateRequest{} }
func (m *SubscriptionCreateRequest) String() string { return proto.CompactTextString(m) }
func (*SubscriptionCreateRequest) ProtoMessage()    {}
func (*SubscriptionCreateRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_f771f8a0984858e8, []int{0}
}
func (m *SubscriptionCreateRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SubscriptionCreateRequest.Unmarshal(m, b)
}
func (m *SubscriptionCreateRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SubscriptionCreateRequest.Marshal(b, m, deterministic)
}
func (m *SubscriptionCreateRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SubscriptionCreateRequest.Merge(m, src)
}
func (m *SubscriptionCreateRequest) XXX_Size() int {
	return xxx_messageInfo_SubscriptionCreateRequest.Size(m)
}
func (m *SubscriptionCreateRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_SubscriptionCreateRequest.DiscardUnknown(m)
}

var xxx_messageInfo_SubscriptionCreateRequest proto.InternalMessageInfo

func (m *SubscriptionCreateRequest) GetProvider() *Provider {
	if m != nil {
		return m.Provider
	}
	return nil
}

func (m *SubscriptionCreateRequest) GetKey() string {
	if m != nil {
		return m.Key
	}
	return ""
}

func (m *SubscriptionCreateRequest) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

type SubscriptionInviteRequest struct {
	Subscription         *Subscription `protobuf:"bytes,1,opt,name=subscription,proto3" json:"subscription,omitempty"`
	Name                 string        `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *SubscriptionInviteRequest) Reset()         { *m = SubscriptionInviteRequest{} }
func (m *SubscriptionInviteRequest) String() string { return proto.CompactTextString(m) }
func (*SubscriptionInviteRequest) ProtoMessage()    {}
func (*SubscriptionInviteRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_f771f8a0984858e8, []int{1}
}
func (m *SubscriptionInviteRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SubscriptionInviteRequest.Unmarshal(m, b)
}
func (m *SubscriptionInviteRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SubscriptionInviteRequest.Marshal(b, m, deterministic)
}
func (m *SubscriptionInviteRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SubscriptionInviteRequest.Merge(m, src)
}
func (m *SubscriptionInviteRequest) XXX_Size() int {
	return xxx_messageInfo_SubscriptionInviteRequest.Size(m)
}
func (m *SubscriptionInviteRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_SubscriptionInviteRequest.DiscardUnknown(m)
}

var xxx_messageInfo_SubscriptionInviteRequest proto.InternalMessageInfo

func (m *SubscriptionInviteRequest) GetSubscription() *Subscription {
	if m != nil {
		return m.Subscription
	}
	return nil
}

func (m *SubscriptionInviteRequest) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

type SubscriptionInviteResponse struct {
	Subscription         *Subscription `protobuf:"bytes,1,opt,name=subscription,proto3" json:"subscription,omitempty"`
	Name                 string        `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Token                string        `protobuf:"bytes,3,opt,name=token,proto3" json:"token,omitempty"`
	AcceptUrl            string        `protobuf:"bytes,4,opt,name=accept_url,json=acceptUrl,proto3" json:"accept_url,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *SubscriptionInviteResponse) Reset()         { *m = SubscriptionInviteResponse{} }
func (m *SubscriptionInviteResponse) String() string { return proto.CompactTextString(m) }
func (*SubscriptionInviteResponse) ProtoMessage()    {}
func (*SubscriptionInviteResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_f771f8a0984858e8, []int{2}
}
func (m *SubscriptionInviteResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SubscriptionInviteResponse.Unmarshal(m, b)
}
func (m *SubscriptionInviteResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SubscriptionInviteResponse.Marshal(b, m, deterministic)
}
func (m *SubscriptionInviteResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SubscriptionInviteResponse.Merge(m, src)
}
func (m *SubscriptionInviteResponse) XXX_Size() int {
	return xxx_messageInfo_SubscriptionInviteResponse.Size(m)
}
func (m *SubscriptionInviteResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_SubscriptionInviteResponse.DiscardUnknown(m)
}

var xxx_messageInfo_SubscriptionInviteResponse proto.InternalMessageInfo

func (m *SubscriptionInviteResponse) GetSubscription() *Subscription {
	if m != nil {
		return m.Subscription
	}
	return nil
}

func (m *SubscriptionInviteResponse) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *SubscriptionInviteResponse) GetToken() string {
	if m != nil {
		return m.Token
	}
	return ""
}

func (m *SubscriptionInviteResponse) GetAcceptUrl() string {
	if m != nil {
		return m.AcceptUrl
	}
	return ""
}

type SubscriptionAcceptRequest struct {
	Consumer             *Consumer     `protobuf:"bytes,1,opt,name=consumer,proto3" json:"consumer,omitempty"`
	Subscription         *Subscription `protobuf:"bytes,2,opt,name=subscription,proto3" json:"subscription,omitempty"`
	Token                string        `protobuf:"bytes,3,opt,name=token,proto3" json:"token,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *SubscriptionAcceptRequest) Reset()         { *m = SubscriptionAcceptRequest{} }
func (m *SubscriptionAcceptRequest) String() string { return proto.CompactTextString(m) }
func (*SubscriptionAcceptRequest) ProtoMessage()    {}
func (*SubscriptionAcceptRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_f771f8a0984858e8, []int{3}
}
func (m *SubscriptionAcceptRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SubscriptionAcceptRequest.Unmarshal(m, b)
}
func (m *SubscriptionAcceptRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SubscriptionAcceptRequest.Marshal(b, m, deterministic)
}
func (m *SubscriptionAcceptRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SubscriptionAcceptRequest.Merge(m, src)
}
func (m *SubscriptionAcceptRequest) XXX_Size() int {
	return xxx_messageInfo_SubscriptionAcceptRequest.Size(m)
}
func (m *SubscriptionAcceptRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_SubscriptionAcceptRequest.DiscardUnknown(m)
}

var xxx_messageInfo_SubscriptionAcceptRequest proto.InternalMessageInfo

func (m *SubscriptionAcceptRequest) GetConsumer() *Consumer {
	if m != nil {
		return m.Consumer
	}
	return nil
}

func (m *SubscriptionAcceptRequest) GetSubscription() *Subscription {
	if m != nil {
		return m.Subscription
	}
	return nil
}

func (m *SubscriptionAcceptRequest) GetToken() string {
	if m != nil {
		return m.Token
	}
	return ""
}

type SubscriptionAcceptResponse struct {
	Received             bool     `protobuf:"varint,1,opt,name=received,proto3" json:"received,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SubscriptionAcceptResponse) Reset()         { *m = SubscriptionAcceptResponse{} }
func (m *SubscriptionAcceptResponse) String() string { return proto.CompactTextString(m) }
func (*SubscriptionAcceptResponse) ProtoMessage()    {}
func (*SubscriptionAcceptResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_f771f8a0984858e8, []int{4}
}
func (m *SubscriptionAcceptResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SubscriptionAcceptResponse.Unmarshal(m, b)
}
func (m *SubscriptionAcceptResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SubscriptionAcceptResponse.Marshal(b, m, deterministic)
}
func (m *SubscriptionAcceptResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SubscriptionAcceptResponse.Merge(m, src)
}
func (m *SubscriptionAcceptResponse) XXX_Size() int {
	return xxx_messageInfo_SubscriptionAcceptResponse.Size(m)
}
func (m *SubscriptionAcceptResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_SubscriptionAcceptResponse.DiscardUnknown(m)
}

var xxx_messageInfo_SubscriptionAcceptResponse proto.InternalMessageInfo

func (m *SubscriptionAcceptResponse) GetReceived() bool {
	if m != nil {
		return m.Received
	}
	return false
}

type TransmitRequest struct {
	Provider             *Provider     `protobuf:"bytes,1,opt,name=provider,proto3" json:"provider,omitempty"`
	Subscription         *Subscription `protobuf:"bytes,2,opt,name=subscription,proto3" json:"subscription,omitempty"`
	Message              *Message      `protobuf:"bytes,3,opt,name=message,proto3" json:"message,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *TransmitRequest) Reset()         { *m = TransmitRequest{} }
func (m *TransmitRequest) String() string { return proto.CompactTextString(m) }
func (*TransmitRequest) ProtoMessage()    {}
func (*TransmitRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_f771f8a0984858e8, []int{5}
}
func (m *TransmitRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TransmitRequest.Unmarshal(m, b)
}
func (m *TransmitRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TransmitRequest.Marshal(b, m, deterministic)
}
func (m *TransmitRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TransmitRequest.Merge(m, src)
}
func (m *TransmitRequest) XXX_Size() int {
	return xxx_messageInfo_TransmitRequest.Size(m)
}
func (m *TransmitRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_TransmitRequest.DiscardUnknown(m)
}

var xxx_messageInfo_TransmitRequest proto.InternalMessageInfo

func (m *TransmitRequest) GetProvider() *Provider {
	if m != nil {
		return m.Provider
	}
	return nil
}

func (m *TransmitRequest) GetSubscription() *Subscription {
	if m != nil {
		return m.Subscription
	}
	return nil
}

func (m *TransmitRequest) GetMessage() *Message {
	if m != nil {
		return m.Message
	}
	return nil
}

type TransmitResponse struct {
	Received             bool     `protobuf:"varint,1,opt,name=received,proto3" json:"received,omitempty"`
	Message              *Message `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *TransmitResponse) Reset()         { *m = TransmitResponse{} }
func (m *TransmitResponse) String() string { return proto.CompactTextString(m) }
func (*TransmitResponse) ProtoMessage()    {}
func (*TransmitResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_f771f8a0984858e8, []int{6}
}
func (m *TransmitResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TransmitResponse.Unmarshal(m, b)
}
func (m *TransmitResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TransmitResponse.Marshal(b, m, deterministic)
}
func (m *TransmitResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TransmitResponse.Merge(m, src)
}
func (m *TransmitResponse) XXX_Size() int {
	return xxx_messageInfo_TransmitResponse.Size(m)
}
func (m *TransmitResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_TransmitResponse.DiscardUnknown(m)
}

var xxx_messageInfo_TransmitResponse proto.InternalMessageInfo

func (m *TransmitResponse) GetReceived() bool {
	if m != nil {
		return m.Received
	}
	return false
}

func (m *TransmitResponse) GetMessage() *Message {
	if m != nil {
		return m.Message
	}
	return nil
}

type Message struct {
	Id                   string            `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	ProviderReference    string            `protobuf:"bytes,2,opt,name=provider_reference,json=providerReference,proto3" json:"provider_reference,omitempty"`
	Method               HttpMethod        `protobuf:"varint,3,opt,name=method,proto3,enum=webhookd.HttpMethod" json:"method,omitempty"`
	Body                 string            `protobuf:"bytes,4,opt,name=body,proto3" json:"body,omitempty"`
	Query                map[string]string `protobuf:"bytes,5,rep,name=query,proto3" json:"query,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	Headers              map[string]string `protobuf:"bytes,6,rep,name=headers,proto3" json:"headers,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-"`
	XXX_unrecognized     []byte            `json:"-"`
	XXX_sizecache        int32             `json:"-"`
}

func (m *Message) Reset()         { *m = Message{} }
func (m *Message) String() string { return proto.CompactTextString(m) }
func (*Message) ProtoMessage()    {}
func (*Message) Descriptor() ([]byte, []int) {
	return fileDescriptor_f771f8a0984858e8, []int{7}
}
func (m *Message) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Message.Unmarshal(m, b)
}
func (m *Message) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Message.Marshal(b, m, deterministic)
}
func (m *Message) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Message.Merge(m, src)
}
func (m *Message) XXX_Size() int {
	return xxx_messageInfo_Message.Size(m)
}
func (m *Message) XXX_DiscardUnknown() {
	xxx_messageInfo_Message.DiscardUnknown(m)
}

var xxx_messageInfo_Message proto.InternalMessageInfo

func (m *Message) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *Message) GetProviderReference() string {
	if m != nil {
		return m.ProviderReference
	}
	return ""
}

func (m *Message) GetMethod() HttpMethod {
	if m != nil {
		return m.Method
	}
	return HTTP_METHOD_UNKNOWN
}

func (m *Message) GetBody() string {
	if m != nil {
		return m.Body
	}
	return ""
}

func (m *Message) GetQuery() map[string]string {
	if m != nil {
		return m.Query
	}
	return nil
}

func (m *Message) GetHeaders() map[string]string {
	if m != nil {
		return m.Headers
	}
	return nil
}

type Provider struct {
	Id                   string   `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Name                 string   `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	State                State    `protobuf:"varint,3,opt,name=state,proto3,enum=webhookd.State" json:"state,omitempty"`
	Plan                 Plan     `protobuf:"varint,4,opt,name=plan,proto3,enum=webhookd.Plan" json:"plan,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Provider) Reset()         { *m = Provider{} }
func (m *Provider) String() string { return proto.CompactTextString(m) }
func (*Provider) ProtoMessage()    {}
func (*Provider) Descriptor() ([]byte, []int) {
	return fileDescriptor_f771f8a0984858e8, []int{8}
}
func (m *Provider) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Provider.Unmarshal(m, b)
}
func (m *Provider) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Provider.Marshal(b, m, deterministic)
}
func (m *Provider) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Provider.Merge(m, src)
}
func (m *Provider) XXX_Size() int {
	return xxx_messageInfo_Provider.Size(m)
}
func (m *Provider) XXX_DiscardUnknown() {
	xxx_messageInfo_Provider.DiscardUnknown(m)
}

var xxx_messageInfo_Provider proto.InternalMessageInfo

func (m *Provider) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *Provider) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *Provider) GetState() State {
	if m != nil {
		return m.State
	}
	return STATE_UNKNOWN
}

func (m *Provider) GetPlan() Plan {
	if m != nil {
		return m.Plan
	}
	return PLAN_UNKNOWN
}

type Consumer struct {
	Id                   string   `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Name                 string   `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	State                State    `protobuf:"varint,3,opt,name=state,proto3,enum=webhookd.State" json:"state,omitempty"`
	Plan                 Plan     `protobuf:"varint,4,opt,name=plan,proto3,enum=webhookd.Plan" json:"plan,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Consumer) Reset()         { *m = Consumer{} }
func (m *Consumer) String() string { return proto.CompactTextString(m) }
func (*Consumer) ProtoMessage()    {}
func (*Consumer) Descriptor() ([]byte, []int) {
	return fileDescriptor_f771f8a0984858e8, []int{9}
}
func (m *Consumer) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Consumer.Unmarshal(m, b)
}
func (m *Consumer) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Consumer.Marshal(b, m, deterministic)
}
func (m *Consumer) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Consumer.Merge(m, src)
}
func (m *Consumer) XXX_Size() int {
	return xxx_messageInfo_Consumer.Size(m)
}
func (m *Consumer) XXX_DiscardUnknown() {
	xxx_messageInfo_Consumer.DiscardUnknown(m)
}

var xxx_messageInfo_Consumer proto.InternalMessageInfo

func (m *Consumer) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *Consumer) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *Consumer) GetState() State {
	if m != nil {
		return m.State
	}
	return STATE_UNKNOWN
}

func (m *Consumer) GetPlan() Plan {
	if m != nil {
		return m.Plan
	}
	return PLAN_UNKNOWN
}

type Subscription struct {
	Id                   string   `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Key                  string   `protobuf:"bytes,2,opt,name=key,proto3" json:"key,omitempty"`
	Name                 string   `protobuf:"bytes,3,opt,name=name,proto3" json:"name,omitempty"`
	State                State    `protobuf:"varint,4,opt,name=state,proto3,enum=webhookd.State" json:"state,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Subscription) Reset()         { *m = Subscription{} }
func (m *Subscription) String() string { return proto.CompactTextString(m) }
func (*Subscription) ProtoMessage()    {}
func (*Subscription) Descriptor() ([]byte, []int) {
	return fileDescriptor_f771f8a0984858e8, []int{10}
}
func (m *Subscription) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Subscription.Unmarshal(m, b)
}
func (m *Subscription) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Subscription.Marshal(b, m, deterministic)
}
func (m *Subscription) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Subscription.Merge(m, src)
}
func (m *Subscription) XXX_Size() int {
	return xxx_messageInfo_Subscription.Size(m)
}
func (m *Subscription) XXX_DiscardUnknown() {
	xxx_messageInfo_Subscription.DiscardUnknown(m)
}

var xxx_messageInfo_Subscription proto.InternalMessageInfo

func (m *Subscription) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *Subscription) GetKey() string {
	if m != nil {
		return m.Key
	}
	return ""
}

func (m *Subscription) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *Subscription) GetState() State {
	if m != nil {
		return m.State
	}
	return STATE_UNKNOWN
}

type Destination struct {
	Id                   string            `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Name                 string            `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Url                  string            `protobuf:"bytes,3,opt,name=url,proto3" json:"url,omitempty"`
	RetryCount           int32             `protobuf:"varint,4,opt,name=retry_count,json=retryCount,proto3" json:"retry_count,omitempty"`
	RetryPolicy          string            `protobuf:"bytes,5,opt,name=retry_policy,json=retryPolicy,proto3" json:"retry_policy,omitempty"`
	Headers              map[string]string `protobuf:"bytes,6,rep,name=headers,proto3" json:"headers,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	State                State             `protobuf:"varint,7,opt,name=state,proto3,enum=webhookd.State" json:"state,omitempty"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-"`
	XXX_unrecognized     []byte            `json:"-"`
	XXX_sizecache        int32             `json:"-"`
}

func (m *Destination) Reset()         { *m = Destination{} }
func (m *Destination) String() string { return proto.CompactTextString(m) }
func (*Destination) ProtoMessage()    {}
func (*Destination) Descriptor() ([]byte, []int) {
	return fileDescriptor_f771f8a0984858e8, []int{11}
}
func (m *Destination) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Destination.Unmarshal(m, b)
}
func (m *Destination) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Destination.Marshal(b, m, deterministic)
}
func (m *Destination) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Destination.Merge(m, src)
}
func (m *Destination) XXX_Size() int {
	return xxx_messageInfo_Destination.Size(m)
}
func (m *Destination) XXX_DiscardUnknown() {
	xxx_messageInfo_Destination.DiscardUnknown(m)
}

var xxx_messageInfo_Destination proto.InternalMessageInfo

func (m *Destination) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *Destination) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *Destination) GetUrl() string {
	if m != nil {
		return m.Url
	}
	return ""
}

func (m *Destination) GetRetryCount() int32 {
	if m != nil {
		return m.RetryCount
	}
	return 0
}

func (m *Destination) GetRetryPolicy() string {
	if m != nil {
		return m.RetryPolicy
	}
	return ""
}

func (m *Destination) GetHeaders() map[string]string {
	if m != nil {
		return m.Headers
	}
	return nil
}

func (m *Destination) GetState() State {
	if m != nil {
		return m.State
	}
	return STATE_UNKNOWN
}

func init() {
	proto.RegisterEnum("webhookd.HttpMethod", HttpMethod_name, HttpMethod_value)
	proto.RegisterEnum("webhookd.State", State_name, State_value)
	proto.RegisterEnum("webhookd.Plan", Plan_name, Plan_value)
	proto.RegisterType((*SubscriptionCreateRequest)(nil), "webhookd.SubscriptionCreateRequest")
	proto.RegisterType((*SubscriptionInviteRequest)(nil), "webhookd.SubscriptionInviteRequest")
	proto.RegisterType((*SubscriptionInviteResponse)(nil), "webhookd.SubscriptionInviteResponse")
	proto.RegisterType((*SubscriptionAcceptRequest)(nil), "webhookd.SubscriptionAcceptRequest")
	proto.RegisterType((*SubscriptionAcceptResponse)(nil), "webhookd.SubscriptionAcceptResponse")
	proto.RegisterType((*TransmitRequest)(nil), "webhookd.TransmitRequest")
	proto.RegisterType((*TransmitResponse)(nil), "webhookd.TransmitResponse")
	proto.RegisterType((*Message)(nil), "webhookd.Message")
	proto.RegisterMapType((map[string]string)(nil), "webhookd.Message.HeadersEntry")
	proto.RegisterMapType((map[string]string)(nil), "webhookd.Message.QueryEntry")
	proto.RegisterType((*Provider)(nil), "webhookd.Provider")
	proto.RegisterType((*Consumer)(nil), "webhookd.Consumer")
	proto.RegisterType((*Subscription)(nil), "webhookd.Subscription")
	proto.RegisterType((*Destination)(nil), "webhookd.Destination")
	proto.RegisterMapType((map[string]string)(nil), "webhookd.Destination.HeadersEntry")
}

func init() { proto.RegisterFile("webhookd.proto", fileDescriptor_f771f8a0984858e8) }

var fileDescriptor_f771f8a0984858e8 = []byte{
	// 994 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xbc, 0x56, 0x41, 0x6f, 0xe3, 0x44,
	0x14, 0x5e, 0xbb, 0x49, 0x93, 0xbe, 0x64, 0xd3, 0xe9, 0xb4, 0x2c, 0xd9, 0x08, 0x96, 0x62, 0x40,
	0x2a, 0x85, 0xa6, 0x52, 0xb8, 0x54, 0x15, 0x17, 0x37, 0x19, 0x48, 0xb4, 0x69, 0xe2, 0x75, 0x1c,
	0x16, 0xc1, 0x21, 0x72, 0x9c, 0xd9, 0xd4, 0x4a, 0x62, 0xbb, 0xb6, 0x53, 0x14, 0xf1, 0x5b, 0x38,
	0x70, 0x43, 0xfc, 0x1a, 0x7e, 0x00, 0x17, 0xfe, 0x00, 0x17, 0xfe, 0x00, 0xf2, 0x8c, 0x1d, 0x3b,
	0x8e, 0xbb, 0xcb, 0xee, 0xa2, 0xbd, 0xcd, 0x7c, 0xdf, 0x7b, 0xef, 0x7b, 0x6f, 0xfc, 0x66, 0xfc,
	0xa0, 0xf2, 0x13, 0x1d, 0xdf, 0xd8, 0xf6, 0x6c, 0x52, 0x77, 0x5c, 0xdb, 0xb7, 0x71, 0x31, 0xda,
	0xd7, 0xce, 0xa6, 0xa6, 0x7f, 0xb3, 0x1c, 0xd7, 0x0d, 0x7b, 0x71, 0x3e, 0xb5, 0xa7, 0xf6, 0x39,
	0x33, 0x18, 0x2f, 0x5f, 0xb0, 0x1d, 0xdb, 0xb0, 0x15, 0x77, 0x94, 0x6e, 0xe1, 0xf1, 0x60, 0x39,
	0xf6, 0x0c, 0xd7, 0x74, 0x7c, 0xd3, 0xb6, 0x9a, 0x2e, 0xd5, 0x7d, 0xaa, 0xd2, 0xdb, 0x25, 0xf5,
	0x7c, 0x5c, 0x87, 0xa2, 0xe3, 0xda, 0x77, 0xe6, 0x84, 0xba, 0x55, 0xe1, 0x58, 0x38, 0x29, 0x35,
	0x70, 0x7d, 0x2d, 0xac, 0x84, 0x8c, 0xba, 0xb6, 0xc1, 0x08, 0x76, 0x66, 0x74, 0x55, 0x15, 0x8f,
	0x85, 0x93, 0x3d, 0x35, 0x58, 0x62, 0x0c, 0x39, 0x4b, 0x5f, 0xd0, 0xea, 0x0e, 0x83, 0xd8, 0x5a,
	0x9a, 0x6d, 0x4a, 0x76, 0xac, 0x3b, 0x33, 0x96, 0xbc, 0x84, 0xb2, 0x97, 0x20, 0x43, 0xd9, 0x47,
	0xb1, 0x6c, 0xd2, 0x55, 0xdd, 0xb0, 0x5d, 0x8b, 0x89, 0x09, 0xb1, 0x5f, 0x05, 0xa8, 0x65, 0xa9,
	0x79, 0x8e, 0x6d, 0x79, 0xf4, 0xff, 0x96, 0xc3, 0x47, 0x90, 0xf7, 0xed, 0x19, 0xb5, 0xc2, 0x82,
	0xf9, 0x06, 0x7f, 0x08, 0xa0, 0x1b, 0x06, 0x75, 0xfc, 0xd1, 0xd2, 0x9d, 0x57, 0x73, 0x8c, 0xda,
	0xe3, 0xc8, 0xd0, 0x9d, 0x4b, 0xbf, 0x08, 0x9b, 0x27, 0x22, 0x33, 0x26, 0xf1, 0x11, 0x0c, 0xdb,
	0xf2, 0x96, 0x8b, 0xac, 0x8f, 0xd0, 0x0c, 0x19, 0x75, 0x6d, 0xb3, 0x55, 0x92, 0xf8, 0x1a, 0x25,
	0x65, 0xa6, 0x2f, 0x5d, 0x6c, 0x1e, 0x61, 0x94, 0x5e, 0x78, 0x84, 0x35, 0x28, 0xba, 0xd4, 0xa0,
	0xe6, 0x1d, 0x9d, 0xb0, 0xfc, 0x8a, 0xea, 0x7a, 0x2f, 0xfd, 0x2e, 0xc0, 0xbe, 0xe6, 0xea, 0x96,
	0xb7, 0x30, 0xfd, 0x37, 0x6d, 0xaa, 0xb7, 0xa9, 0xe7, 0x0b, 0x28, 0x2c, 0xa8, 0xe7, 0xe9, 0x53,
	0xde, 0x81, 0xa5, 0xc6, 0x41, 0xec, 0x76, 0xcd, 0x09, 0x35, 0xb2, 0x90, 0x7e, 0x04, 0x14, 0xe7,
	0xfa, 0xea, 0xe2, 0x92, 0xc1, 0xc5, 0x57, 0x06, 0xff, 0x5b, 0x84, 0x42, 0x08, 0xe2, 0x0a, 0x88,
	0x26, 0x0f, 0xb7, 0xa7, 0x8a, 0xe6, 0x04, 0x9f, 0x01, 0x8e, 0xaa, 0x1d, 0xb9, 0xf4, 0x05, 0x75,
	0xa9, 0x65, 0x44, 0x6d, 0x75, 0x10, 0x31, 0x6a, 0x44, 0xe0, 0x2f, 0x61, 0x77, 0x41, 0xfd, 0x1b,
	0x7b, 0xc2, 0x6a, 0xaa, 0x34, 0x8e, 0x62, 0xd9, 0xb6, 0xef, 0x3b, 0xd7, 0x8c, 0x53, 0x43, 0x9b,
	0xa0, 0x4b, 0xc7, 0xf6, 0x64, 0x15, 0x76, 0x1d, 0x5b, 0xe3, 0x06, 0xe4, 0x6f, 0x97, 0xd4, 0x5d,
	0x55, 0xf3, 0xc7, 0x3b, 0x27, 0xa5, 0xc6, 0x07, 0x5b, 0x79, 0xd7, 0x9f, 0x05, 0x34, 0xb1, 0x7c,
	0x77, 0xa5, 0x72, 0x53, 0x7c, 0x01, 0x85, 0x1b, 0xaa, 0x4f, 0xa8, 0xeb, 0x55, 0x77, 0x99, 0xd7,
	0x93, 0x6d, 0xaf, 0x36, 0x37, 0xe0, 0x7e, 0x91, 0x79, 0xed, 0x02, 0x20, 0x0e, 0x17, 0xbd, 0x11,
	0x42, 0xfc, 0x46, 0x1c, 0x41, 0xfe, 0x4e, 0x9f, 0x2f, 0xa3, 0x8a, 0xf9, 0xe6, 0x52, 0xbc, 0x10,
	0x6a, 0x97, 0x50, 0x4e, 0x86, 0x7c, 0x1d, 0x5f, 0x69, 0x05, 0xc5, 0xa8, 0x99, 0xb6, 0x0e, 0x3c,
	0xeb, 0xe6, 0x7e, 0x06, 0x79, 0xcf, 0xd7, 0x7d, 0x1a, 0x1e, 0xea, 0x7e, 0xa2, 0xbf, 0x02, 0x58,
	0xe5, 0x2c, 0x96, 0x20, 0xe7, 0xcc, 0x75, 0x8b, 0x1d, 0x67, 0xa5, 0x51, 0x49, 0x74, 0xee, 0x5c,
	0xb7, 0x54, 0xc6, 0x05, 0xd2, 0xd1, 0xbd, 0x7c, 0xd7, 0xd2, 0x33, 0x28, 0x27, 0xaf, 0xc3, 0x96,
	0xfc, 0x7f, 0x7a, 0xa1, 0xe3, 0x84, 0x72, 0x2f, 0x4b, 0x48, 0xfa, 0x4d, 0x84, 0x52, 0x8b, 0x7a,
	0xbe, 0x69, 0xe9, 0x99, 0x62, 0x59, 0xb5, 0x22, 0xd8, 0x09, 0xde, 0x40, 0xae, 0x16, 0x2c, 0xf1,
	0x47, 0x50, 0x72, 0xa9, 0xef, 0xae, 0x46, 0x86, 0xbd, 0xb4, 0x7c, 0x26, 0x99, 0x57, 0x81, 0x41,
	0xcd, 0x00, 0xc1, 0x1f, 0x43, 0x99, 0x1b, 0x38, 0xf6, 0xdc, 0x34, 0x82, 0xa6, 0x0d, 0x7c, 0xb9,
	0x93, 0xc2, 0x20, 0xfc, 0x75, 0xba, 0x39, 0xa5, 0x38, 0xe5, 0x44, 0x86, 0xd9, 0x0d, 0x1a, 0x97,
	0x5b, 0x78, 0x59, 0xb9, 0x6f, 0xd3, 0x8d, 0xa7, 0x7f, 0x0a, 0x00, 0xf1, 0xe5, 0xc4, 0xef, 0xc3,
	0x61, 0x5b, 0xd3, 0x94, 0xd1, 0x35, 0xd1, 0xda, 0xfd, 0xd6, 0x68, 0xd8, 0x7b, 0xda, 0xeb, 0x3f,
	0xef, 0xa1, 0x07, 0xf8, 0x10, 0xf6, 0x93, 0xc4, 0xb7, 0x44, 0x43, 0x02, 0x3e, 0x02, 0x94, 0x04,
	0xdb, 0x44, 0x6e, 0x21, 0x31, 0x8d, 0x2a, 0xfd, 0x81, 0x86, 0x76, 0xd2, 0x01, 0x94, 0xa1, 0x86,
	0x72, 0xf8, 0x11, 0xe0, 0x24, 0xd8, 0x22, 0x5d, 0xa2, 0x11, 0x94, 0x4f, 0xa7, 0xd1, 0xec, 0xf7,
	0x7a, 0xa4, 0xa9, 0xa1, 0xdd, 0x34, 0xd1, 0x57, 0xb4, 0x4e, 0xbf, 0x37, 0x40, 0x05, 0xfc, 0x1e,
	0x1c, 0x24, 0x09, 0x4d, 0x95, 0x9b, 0x04, 0x15, 0x4f, 0x7f, 0x86, 0x3c, 0x3b, 0x2a, 0x7c, 0x00,
	0x0f, 0x07, 0x9a, 0xac, 0x91, 0x44, 0x49, 0x08, 0xca, 0x1c, 0x92, 0x9b, 0x5a, 0xe7, 0x3b, 0x82,
	0x84, 0x18, 0x51, 0xe4, 0xe1, 0x80, 0x04, 0xb5, 0x1c, 0xc2, 0x3e, 0x47, 0x06, 0xc3, 0x81, 0x42,
	0x7a, 0x2d, 0xd2, 0xe2, 0xa5, 0x70, 0xb0, 0x29, 0xf7, 0x9a, 0xa4, 0xdb, 0x25, 0x2d, 0x94, 0x8b,
	0x05, 0x78, 0x11, 0x2d, 0x94, 0x3f, 0xfd, 0x1e, 0x72, 0xc1, 0x0d, 0x08, 0xc2, 0x2a, 0x5d, 0xb9,
	0x97, 0x90, 0xae, 0x00, 0x30, 0x44, 0x53, 0x3b, 0x72, 0x17, 0x09, 0xf8, 0x21, 0xec, 0xb1, 0xfd,
	0x37, 0x2a, 0x21, 0x48, 0x5c, 0x6f, 0x15, 0xb9, 0x13, 0xe8, 0x45, 0xfe, 0x57, 0x64, 0xa0, 0xf4,
	0x9f, 0x12, 0x94, 0x6b, 0xfc, 0x23, 0x42, 0xe9, 0x79, 0xd8, 0x0b, 0xb2, 0x63, 0xe2, 0x11, 0xe0,
	0xed, 0x61, 0x09, 0x7f, 0x92, 0xfd, 0x2b, 0xda, 0x18, 0xa5, 0x6a, 0x9f, 0x66, 0x1b, 0xa5, 0xc6,
	0x91, 0x94, 0x00, 0x67, 0xef, 0x13, 0xd8, 0x18, 0x9c, 0xde, 0x4c, 0x80, 0xff, 0xca, 0xef, 0x13,
	0xd8, 0x98, 0x43, 0xee, 0x13, 0x48, 0x4d, 0x03, 0x32, 0x14, 0xa3, 0x9f, 0x28, 0x7e, 0x1c, 0x7b,
	0xa4, 0x86, 0x80, 0x5a, 0x2d, 0x8b, 0xe2, 0x21, 0xae, 0x9e, 0xfd, 0xf1, 0xd7, 0x93, 0x07, 0x50,
	0x36, 0xec, 0xc5, 0xda, 0xe8, 0x0a, 0x25, 0x3e, 0x83, 0x12, 0x0c, 0xae, 0x8a, 0xf0, 0xc3, 0xe7,
	0x89, 0x49, 0x37, 0x32, 0x3c, 0xd7, 0x1d, 0xf3, 0x8c, 0x4d, 0xb6, 0x67, 0x53, 0x7b, 0x8d, 0x8e,
	0x77, 0x19, 0xf4, 0xd5, 0xbf, 0x01, 0x00, 0x00, 0xff, 0xff, 0xbf, 0x10, 0x01, 0x4a, 0x37, 0x0b,
	0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// WebhookdApiClient is the client API for WebhookdApi service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type WebhookdApiClient interface {
	SubscriptionCreate(ctx context.Context, in *SubscriptionCreateRequest, opts ...grpc.CallOption) (*SubscriptionInviteResponse, error)
	SubscriptionInvite(ctx context.Context, in *SubscriptionInviteRequest, opts ...grpc.CallOption) (*SubscriptionInviteResponse, error)
	SubscriptionAccept(ctx context.Context, in *SubscriptionAcceptRequest, opts ...grpc.CallOption) (*SubscriptionAcceptResponse, error)
	Transmit(ctx context.Context, in *TransmitRequest, opts ...grpc.CallOption) (*TransmitResponse, error)
}

type webhookdApiClient struct {
	cc *grpc.ClientConn
}

func NewWebhookdApiClient(cc *grpc.ClientConn) WebhookdApiClient {
	return &webhookdApiClient{cc}
}

func (c *webhookdApiClient) SubscriptionCreate(ctx context.Context, in *SubscriptionCreateRequest, opts ...grpc.CallOption) (*SubscriptionInviteResponse, error) {
	out := new(SubscriptionInviteResponse)
	err := c.cc.Invoke(ctx, "/webhookd.WebhookdApi/SubscriptionCreate", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *webhookdApiClient) SubscriptionInvite(ctx context.Context, in *SubscriptionInviteRequest, opts ...grpc.CallOption) (*SubscriptionInviteResponse, error) {
	out := new(SubscriptionInviteResponse)
	err := c.cc.Invoke(ctx, "/webhookd.WebhookdApi/SubscriptionInvite", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *webhookdApiClient) SubscriptionAccept(ctx context.Context, in *SubscriptionAcceptRequest, opts ...grpc.CallOption) (*SubscriptionAcceptResponse, error) {
	out := new(SubscriptionAcceptResponse)
	err := c.cc.Invoke(ctx, "/webhookd.WebhookdApi/SubscriptionAccept", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *webhookdApiClient) Transmit(ctx context.Context, in *TransmitRequest, opts ...grpc.CallOption) (*TransmitResponse, error) {
	out := new(TransmitResponse)
	err := c.cc.Invoke(ctx, "/webhookd.WebhookdApi/Transmit", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// WebhookdApiServer is the server API for WebhookdApi service.
type WebhookdApiServer interface {
	SubscriptionCreate(context.Context, *SubscriptionCreateRequest) (*SubscriptionInviteResponse, error)
	SubscriptionInvite(context.Context, *SubscriptionInviteRequest) (*SubscriptionInviteResponse, error)
	SubscriptionAccept(context.Context, *SubscriptionAcceptRequest) (*SubscriptionAcceptResponse, error)
	Transmit(context.Context, *TransmitRequest) (*TransmitResponse, error)
}

func RegisterWebhookdApiServer(s *grpc.Server, srv WebhookdApiServer) {
	s.RegisterService(&_WebhookdApi_serviceDesc, srv)
}

func _WebhookdApi_SubscriptionCreate_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SubscriptionCreateRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(WebhookdApiServer).SubscriptionCreate(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/webhookd.WebhookdApi/SubscriptionCreate",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(WebhookdApiServer).SubscriptionCreate(ctx, req.(*SubscriptionCreateRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _WebhookdApi_SubscriptionInvite_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SubscriptionInviteRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(WebhookdApiServer).SubscriptionInvite(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/webhookd.WebhookdApi/SubscriptionInvite",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(WebhookdApiServer).SubscriptionInvite(ctx, req.(*SubscriptionInviteRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _WebhookdApi_SubscriptionAccept_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SubscriptionAcceptRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(WebhookdApiServer).SubscriptionAccept(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/webhookd.WebhookdApi/SubscriptionAccept",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(WebhookdApiServer).SubscriptionAccept(ctx, req.(*SubscriptionAcceptRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _WebhookdApi_Transmit_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(TransmitRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(WebhookdApiServer).Transmit(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/webhookd.WebhookdApi/Transmit",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(WebhookdApiServer).Transmit(ctx, req.(*TransmitRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _WebhookdApi_serviceDesc = grpc.ServiceDesc{
	ServiceName: "webhookd.WebhookdApi",
	HandlerType: (*WebhookdApiServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "SubscriptionCreate",
			Handler:    _WebhookdApi_SubscriptionCreate_Handler,
		},
		{
			MethodName: "SubscriptionInvite",
			Handler:    _WebhookdApi_SubscriptionInvite_Handler,
		},
		{
			MethodName: "SubscriptionAccept",
			Handler:    _WebhookdApi_SubscriptionAccept_Handler,
		},
		{
			MethodName: "Transmit",
			Handler:    _WebhookdApi_Transmit_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "webhookd.proto",
}
